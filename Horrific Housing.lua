-- This file was generated using Luraph Obfuscator v13.5.4

return(function(hM,FM,YM,zM,VM,PM,xM,aM,lM,cM,pM,WM,gM,AM,nM,EM,JM,sM,RM,OM,HM,iM,DM,XM,rM,yM,NM,tM,eM,CM,jM,fM,...)local b,k=nil,nil;local GM=0X00;while GM<2 do if GM~=0X0 then k=FM;do GM=0X00002;end;continue;else b=eM;GM=1;end;end;local B,o=pM,(XM);local e=(lM.char);local m=(pcall);local v=(tonumber);local kM=0X1;GM=2;local p,w,l=nil,nil,nil;do repeat if GM<=0 then w=lM.byte;GM=0x1;continue;else do if GM==1 then l=CM.insert;do GM=0X03;end;continue;else do p=string.gsub;end;GM=0;end;end;end;until GM>=3;end;local D=rawget;local z,H,Y,G,f,s,h,W,t,g,F=0X100000000,next,nil,nil,nil,nil,nil,nil,nil,nil,(nil);for Y4=0X0,0X0009 do if Y4<=0x4 then if not(Y4<=1)then if Y4<=0x2 then do f={[DM]=0x1};end;else if Y4~=0X3 then h=lM.unpack;continue;else s=1;end;end;elseif Y4~=0 then G=bit32.band;else Y=coroutine.yield;continue;end;else if Y4<=0X6 then if Y4~=5 then do t=HM;end;else do W=OM;end;continue;end;else do if Y4<=7 then do g=W();end;continue;elseif Y4==8 then continue;else F=yM;end;end;end;end;end;local X=(lM.match);do GM=4;end;local N,c,a,I,u=nil,nil,nil,nil,(nil);repeat if not(GM<=2)then if GM<=0X3 then do GM=0X0002;end;else if GM==0x4 then N="LPH/CD194866356289EF6718CD042H0001231A3FA554F50ED1042H004C91A03FD7A96605CB042H00523C0100020F4H000E020F4H000D020F4H000C09524H00050F2A4H00010F1C4H000200054H00E30100054H00ED0100512H00AF01B4013100192H0023095700172H00D2010541001F2H004A9E016300552H00313F68004E2H009701B301F10100462H000BA2017700192H00415554000E2H0034767500125H007900032H0096932H00995H0003E9F72B284850CD16CB042H00773C0100020F4H0019020F4H0018020F4H001709524H00030F2A4H00020F1C4H000700054H00E60100054H00EA0100452H00633418000C2H007D760D00042H009901EF0117000D2H0067090A002E2H00EC013F9401020F4H000C021B3H000112020F4H0021021F3H000112020F4H001500245H00020F4H000100034H00BD010F1C3H0001040F1C3H003H020F4H00070F1C3H000200020F4H00F83HFF0F003D5H00020F4H00010F2A4H00020F1C3H000103020F4H00F93HFF2H0F1C3H00030502263H0001EF3HFF0F020F4H004HFF0F00126H003D3H00050100192H008F01E601E001000B2H00060504020F4H00E93HFF2H0F1C3H0001040F1C3H0002040F1C3H0003040F1C3H002H04003C3H000405003C3H000304003C3H000203003C3H0001020F2A3H002H01020F4H00DD3HFF0F00192H008F01E201E101001D2H00F1012A2700223H000200020F4H000100033H000209020F4H00D73HFF0F35000800060002001400120013001100159C932H007900653H00205FA0024280083H00CD54238AEBA941D2DFFF7H0080043H00E5ACBBD5DF8H00DF019H003H0079A4BC5B3684EE05CB042H00543C0100020F4H0011020F4H0010020F4H000F09524H00040F2A4H00010F1C4H000200054H00E20100054H00ED0100382H00249601CD0100522H006BFD01F20100032H00C901724C004C2H008A01D301E201000E2H00E0014DF30100262H009A010A1600482H006BA101DA01002E2H0041AC015D020F4H000100126H00103H00012H000E2H003476754100032H0096932H00895H0003A8F0D771D7283E1CCB042H00583C0100020F4H0012020F4H0011020F4H001009524H00040F2A4H00010F1C4H000200054H00E30100054H00EE01002D2H004D0A91014H00AB01C5016400522H007E617600072H0043BD014000492H00AB0167F20100562H009801DD01B001020F4H000400126H000E2H0034777500472H00D2012H1E020F4H0003003D3H00022H001D2H00F1012A27020F4H00FB3HFF0F00192H00415954002C3H0002002000062H01001E96932H00815H000352B6BC117B3F4E44CB042H00763C0100020F4H001E020F4H001D020F4H001C09524H00050F2A4H00010F1C4H000500054H00E30100054H00EE0100042H00CE013C7B00292H0065AB011B00232H008101D20158000C2H009901BB01F201002D2H00A4017580014H006DB401D8014H00C701676200462H007544A101020F4H000E003D3H00032H004B3H000300021F3H00031B020F4H00FC3HFF2H0F1C3H0003000F2A3H00042H020F5H000F1C3H00050100103H00062H005A3H000400020F4H000100033H0004AD010F1C3H00050002263H0003F43HFF0F00083H00022H00192H00415754003E2H00010200020F4H00F23HFF2H0F2A3H000803020F4H00010F2A3H00080100192H008F01E901E701001D2H009001776D00243H000800020F4H000100033H0008ED01021B3H0008E73HFF0F020F4H000700573H00032H00126H00292H0006072H020F4H00010F2A3H0007010038000207E03HFF0F00020F4H00EF3HFF0F00513H00082H00032H00DE01A3019D0113000B2H01001C9A932H006900DF017H0080043H00B108B75D80093H001D54E3F96C4CEA7501800B3H006CBB22135910CBBCF1F2D64H00038A6C0B7A610D4B50CB042H00513C0100020F4H000F020F4H000E020F4H000D09524H00030F2A4H00010F1C4H000200054H00E50100054H00E80100562H0051A401C10100162H0038C101B30100032H003219E00100592H001D56940100522H00370BC80100232H009A016AEB0100262H00A801750900292H000C9B013000125H003E00022H0096932H00056H000C3E0100020F4H00DA01020F4H00D901020F4H00D80109524H00090F2A4H00140F1C4H001B00054H00E60100054H00EE014H008C01166300052H00110FC80100562H00E1011BE60100512H006E246C00132H00D10111BD0100292H00EA01F101F301020F4H00CC0100360F002H1D21020F4H00B22H020F4H00A10300192H009601E401BD01001D2H00F101535100543H002B00020F6H00303H00282B020F4H009B03001D2H00F101562800192H009601E901DE0100192H009601EA01E70100243H002F00020F4H000100033H002F1300172H00112H2F00292H002H2F14020F4H00010F2A3H002F14000B2H002F2A2E00342H00112F12000D2H00132H2F004A0F000E2H2F00303H00112F020F4H00B70200303H002324001A2H00222422021B3H00247C020F4H004600083H001A00020F4H001609523H001C0100083H001D000F352H001C1D1F0F352H001C1D1A020F4H00280F352H001C1D10020F4H00020F1C3H001A2A020F4H00120F352H001C1D04020F4H001809523H001F0300192H008F018002EF01020F4H001D00083H001900020F4H00EE3HFF2H0F352H001C1D1E0F110F001C1D2E09523H001E04020F4H00F73HFF2H0F352H001C1D22020F4H00110F1C3H001B17020F4H00E83HFF2H0F352H001C1D020F352H001C1D27020F4H00F53HFF0F09523H001B0500042H00011704020F4H000700083H00162H00053H0017040F1C3H00180700513H001900020F4H00E43HFF2H0F352H001C1D06020F4H000A00083H001800020F4H00E73HFF2H0F352H001C1D180F352H001C1D190F352H001C1D2F020F4H00ED3HFF0F021B3H002055020F4H00040F352H001C1D08020F4H00D63HFF2H0F352H001C1D2D020F4H00E33HFF0F020F4H000A00192H008F018802892H020F4H000200472H00D2012H43020F4H00FC3HFF0F020F4H00CE0200083H002A000F1C3H002B23001D2H00F10153500F1C3H002D2302263H002BF50100192H008F018102ED01020F4H000300543H00212H00310F02204121020F4H0002001D2H00F1014947020F4H00FB3HFF0F020F4H0007004E2H00222422020F4H003300303H00241C004B3H00242H00543H00222H00390F021DBF0122020F4H000300303H002206001D2H00900190018D01020F4H00FA3HFF0F020F4H0032021F3H002A11020F4H00923HFF0F00212H00222422020F4H00A73HFF0F02403H002901020F4H002000580F00232C2B020F4H00010F2A3H002C1400580F00142D2B001D2H0090019B019501000B2H002E2C2D020F4H00F73HFF0F00310F02162C27020F4H008B02000D2H00132H2E004A0F000E2H2E020F4H000500303H002E2800303H002F01020F4H000500172H00112H2F020F4H0008001D2H00F1013855020F5H00020F4H00E63HFF0F00303H003025020F6H00303H00312D00243H002F00020F4H00F63HFF0F00292H002H2F14020F4H00010F2A3H002F14000A3H00282E020F6H00342H00112E12020F4H00E93HFF0F021F3H0020AC01020F4H00FD01021B3H0024E901020F4H0003001D2H00F1014A4B003B2H00222422020F4H00FB3HFF0F020F4H002H02193H0024FA01020F4H008F0200482H00222422020F4H00E001001D2H00F1014843004B3H00212H00310F022CD83HFF0F27020F4H00950200192H009601E101E201020F4H00FE0100323H002900020F4H00FC3HFF0F00310F0200FB0127020F4H00E30102263H0016770F1C3H00151B0F1C3H00162A020F4H000E0F2A3H000809020F4H00010F2A3H0008140F2A3H00090C020F4H00010F2A3H0009140F2A3H000A03020F4H00010F2A3H000A140F2A3H000B2B020F4H00010F2A3H000B140F2A3H000C0F020F4H00030F1C3H0017290F1C3H001823020F4H00EB3HFF2H0F2A3H002H0D020F4H00010F2A3H000D140F2A3H000E28020F4H00010F2A3H000E14003A3H000F02003A3H0010040F1C3H00111B020F5H000F1C3H002H120F1C3H001325020F4H001A0F2A6H00580F000A2H00020F4H00010F2A4H00140F2A3H00012H00580F00152H01020F4H00010F2A3H0001140F2A3H00022H00580F00213H020F4H00010F2A3H0002140F2A3H000300020F4H00010F2A3H00031400580F00242H03020F4H00010F2A3H0003140F2A3H00042000580F00262H04020F4H00010F2A3H0004140F2A3H0005110F2A3H0006010F2A3H00070B020F4H00C83HFF0F00083H001400020F4H00C33HFF0F09523H00202H00083H0021000F352H001C211F0F352H0020211A0F352H002021080F352H002021100F352H002021040F352H002021060F352H0020212D0F352H002021220F352H002021180F352H002021190F352H0020212F0F352H002021020F352H002021270F352H0020211E0F110F001C212E00192H009601DB01BE0100083H00232H00192H008F018402810200243H002200020F4H000100033H00228901001D2H00F1014A49001D2H00F1014B4900192H008F018502820200192H008F018602820200453H002601005A3H002300020F4H000100033H0023800109523H00240200192H008F018502820200192H009601DF01DB0100243H002400021B3H0024903HFF0F020F4H009C0100543H001A00020F4H000100033H001A50000B2H001A1415020F6H00342H00151A12020F4H0003001D2H00900187016D001D2H00F101423C020F4H00F63HFF0F000D2H00132H1A020F6H004A0F000E2H1A00303H00151A020F4H00060F1C3H00202300553H0021100F1C3H00222302263H0020F4FE2HFF0F0018000222C73HFF0F21020F4H00C3FE2HFF0F021F3H0016F13HFF0F020F4H0099FE2HFF0F021B3H0023C0FE2HFF0F020F4H00FA3HFF0F00083H002100020F4H000400303H002105001D2H00F101494700413H002300020F4H000600083H00222H00323H00232H00303H00240C00303H00252000472H00D2012H4002503H0024850100333H002100020F4H00F23HFF0F02013H0020CBFD2HFF0F020F4H007A0038000221800126020F4H0006000E2H0034960175020F4H007D000B2H00272025020F4H00FD3HFF0F00303H002722020F4H00FC3HFF0F00513H00272H00192H009601DC01E001020F4H00FB3HFF0F00292H00232410020F4H00010F2A3H00241400580F0023252400580F00142624020F4H00010F2A3H00261400192H008F018702ED0100192H009601E101DE0100543H002700020F4H000100033H00276D00472H00D2012H4200310F0213D3FE2HFF0F27020F4H00D6FE2HFF0F021F3H002BB8FD2HFF0F020F4H00B1FD2HFF0F00303H002829020F4H0050000E2H0034990175000A3H002H260F1C3H00270700303H002822000A3H002H2700023H002404020F4H000100033H00249C0100192H008F0184028202000B2H00242H2200292H00222422020F4H00010F2A3H002414000B2H00242H220F110F001D211F021B3H00102F020F4H001D0F1C3H002707020F4H00EE3HFF0F00192H009601E101DB0100543H002700020F4H000100033H00279601001D2H00F1014F4900453H002801020F4H000100033H0028D00100093H002400020F4H000100033H00242D001D2H00900191018F01020F6H001D2H00F1014C4900303H002622020F6H000A3H002H2500303H002622020F4H00EB3HFF0F00303H002522001D2H00900193018F01001D2H00900194018F01020F4H00E93HFF0F001D2H00F1014B49020F4H00FA3HFF0F001D2H00F1014A4B020F4H00FC3HFF0F020F4H00993HFF0F00513H002900020F4H0001020F4H001E00303H002829020F4H00FD3HFF0F00150F002A2925021B3H00291D020F4H003000122H00BB01E801E401020F4H00040F1C3H002907020F6H00192H009601E101E201020F4H00FA3HFF0F002F0F0205C4FD2HFF0F29020F4H0020001D2H0090018D0179001D2H0090018E018A0100472H00D2012H3C02203H00209D3HFF0F001D2H00900190019101000D2H0022242200342H0022252200532H00222H2500462H0022262200142H00262H2500442H00252H2400192H008F018302840200162H00222422021B3H0024F8FC2HFF0F020F4H00CEFD2HFF0F00472H00D2012H4502503H0029CEFD2HFF0F00303H00290C00192H009601E301DF01020F4H00FB3HFF0F02193H0029AA3HFF0F020F4H0002001D2H00F1014B49020F4H00F1FD2HFF0F00192H009601E201DE01020F4H00A53HFF0F00303H002422020F4H00E83HFF0F00126H00413H00202H000C3H002004020F4H00FC3HFF2H0F1C3H002A2300303H002B290F1C3H002C2302263H002AB7FD2HFF0F02403H00242HFE2HFF0F020F4H00EBFE2HFF0F021B3H0025C93HFF0F020F4H0098FD2HFF0F001B2H0026F701F301020F4H00EA3HFF0FE600322H00C6932H00210080093H00B948B77541365A6CD6800F3H0040AFFE4A595F97CC4CC68244564F97800B3H00A1309FB1424F7484FA49E3800B3H00E61524678DFF55E2BC686E80083H000BDA8947D8BB7078DFE8036H0080083H0003D2814F20AA947A804H0080083H00FBCA795728A7916080093H00F3C271720EC99E999F80073H00BA69F804DE848680093H00E3B261823ED9BA89AF800B3H00AA59E823C9A690A1CB3F8780073H004F9ECDA8B2EA2CDF00016H0080073H00D84796ABB1BBE680083H0041D03FD1E2BFCEE8800F3H0039C837F5D0B0DEE745A15B1FCFD0CEDF3D7H0080063H007A29B8491FC9DF027H0080073H00B4A37243C96B0B80093H009DAC9B046CC57503E7DF047H0080073H00A493624EFF6A2F80073H008D9C8B0556F47380093H00568594DC0D62F19322DF237H009E8C800D3H007D8C7B15A6E692311CEA172789800D3H0080EF3E32231F559A0C955F0B1380083H006332E104BE4C310980063H005B2AD91AB25680083H005564537D8E10A069DF017H0080083H004D5C4B77A82CA47EDFA77H0080093H0045544371AE3EDC6F49800A3H004C3B0AE617DE6851214B800B3H0002B140F0A8686E78B3E676DFFF7H00DF8H0080083H00A7F625444093CD5C800A3H009FEE1D4E7485F54DF68880083H00152413BDCE4DE0BA800E3H000D1C0B85D675E2A2646062B0ED7580073H007FCEFD53A4A61C4H0002E9B3D777621D8324D7042H00DAEBA6752A8E9069CB042H00683C0100020F4H0012020F4H0011020F4H001009524H00030F2A4H00080F1C4H000900054H00E20100054H00EA0100282H00DB017B3D00262H001591010500562H00D4018301E40100522H00900142E901003B2H008001235D001D2H00E3017A31001A2H00E901C001FA01002D2H00531A6700142H006E8301E201001A2H0008517C00592H0030A601350F2A5H00020F4H00010F2A4H000800580F00043H00580F00053H00580F00032H00020F4H00010F2A4H000800270F00062H000F1C3H00020100335H000F2A6H00580F00043H00580F00053H00580F00032H00020F4H00010F2A4H000800270F00062H000F1C3H002H0200336H00125H008A00032H009D932H00B1A680073H0008F736813B935780073H002140AFB9CE1E2C80083H008AD978083229F22780093H00C291B075C8E5165A2980143H0049E8D7F457569E7F59F7FEF326E516C988A76DE3800F3H0015F423407524E58119DC9E9A8734D8800D3H00F6856486154E358B092H2E756E133H00013H00083H00013H00093H00093H00E18700360A3H000A3H00A57172420B3H000B3H00FF8ED3570C3H000C3H0036F8270A0D3H000D3H00CC4565660E3H000E3H00CA2AE5650F3H000F3H0006DC4875103H00103H00DAE04527113H00113H0089E5B746123H00123H001146DF54133H00133H00DE31981D143H00163H00013H00173H00193H002E3H001A3H001B3H00013H001C3H001F3H002E3H00203H00223H002F3H00233H00243H00013H00253H00283H002F4H00B062451CC395311FCB042H00603C0100020F4H0012020F4H0011020F4H001009524H00030F2A4H00060F1C4H000700054H00E20100054H00EA01000D2H000CFD01C10100492H009A019B019F0100532H0086018D019D0100142H00C601163D00442H00EF01795100562H00880129C60100422H0050AB01A101003B2H00B001E7014800342H00B6014D39020F4H000100126H00390F0203FE3HFF0F000F2A3H00010400580F003H01020F6H00580F2H002H01020F4H00010F2A3H00010600270F00022H01001D2H009001706D00333H000100020F4H000100033H000121020F4H00F23HFF0FAE000401009B932H00817D800C3H009988F793480F5AE31C0D365680143H00CDBC2BE82B1A7AAB4D73623F2AD9929DBCC3819F800D3H007968D757BED792AA62D721049580063H009C0BFA70313080073H00B625143A9ECC52123H00013H00083H00013H00093H00093H004CB244570A3H000A3H0038358F690B3H000B3H004BF5731F0C3H000C3H00F07009640D3H000D3H00EA970C290E3H000E3H005B0B3D660F3H000F3H001887C15B103H00103H00E4DDBD10113H00113H005005C30C123H00133H00013H00143H00143H00583H00153H00153H00013H00163H00183H00593H00193H001A3H00013H001B3H001D3H00593H001E3H001F3H00013H00203H00203H00594H006FAC5001D81E8266CB042H005E3C0100020F4H000E020F4H000D020F4H000C09524H00050F2A4H00080F1C4H000900054H00E20100054H00EA0100452H008001544E001F2H00B60192017D002B2H00B601AE01DB01000B2H0037BE010B00512H0051EA01D00100442H00FA012E3E00492H005A24140F2A4H000400580F00012H00020F4H00010F2A4H000800580F00053H00580F00063H00580F00033H00580F00022H00020F4H00010F2A4H000800270F5H00225H00020F4H000100034H008E0100125H00FC00032H009D932H000922800D3H003FA6452853341F7D27A4040B28800C3H000AC980C42A297A38A542DA26800E3H00EECDA4E1C2686D928DAFE4414392800B3H0048F71ED4BDC53E0F2A4AB780073H00556C3BEDEFAF3B80153H004E2D042647E348BD1044292666E9626D8B32DE7B7A800D3H008940AFCB193ED840594FA7FDE8103H00013H00083H00013H00093H00093H008EB7F53D0A3H000A3H00275A59010B3H000B3H00A768C24C0C3H000C3H0012BA68360D3H000D3H0075DDE77C0E3H000E3H0060C87C310F3H000F3H003A1B836F103H00103H00013H00113H00113H00623H00123H00133H00013H00143H00173H00623H00183H00193H00013H001A3H001B3H00623H001C3H001D3H00013H001E3H001E3H00624H00147B7F35AB989701CB042H005A3C0100020F4H000D020F4H000C020F4H000B09524H00050F2A4H00060F1C4H000700054H00E30100054H00EC014H008A011FEC01003A2H00124267003F2H00AC01D5018B0100552H00A1019201A10100452H0097015BEC0100232H00F90151560F2A4H000100270F00042H000F1C3H00020300245H00020F4H000100034H007B00580F5H00270F00023H00225H00020F4H000100034H00A90100125H00F900032H009B932H00E92D800A3H0064731AE3FA27D66BDBCD80073H00B27148CD8F8733800D3H00234AC9C7E27F865A662F7DB43980143H006E8DC462A1E4DC51F7F53C25D0B794F71665AF15800D3H00AA29C0E62E91085C31134A126E0D3H00013H00083H00013H00093H00093H002B38775C0A3H000A3H003850164F0B3H000B3H004E3D4D6E0C3H000C3H004AAAA15F0D3H000D4H005CEF5F0E3H000E3H00938AFB2H0F3H000F3H00013H00103H00123H005E3H00133H00143H00013H00153H00173H005E3H00183H00193H00013H001A3H001A3H005E4H002A23283532643E14CB042H00623C0100020F4H0011020F4H0010020F4H000F09524H00040F2A4H00080F1C4H000900054H00E10100054H00EC0100272H00B20177B80100452H00E701A101C50100172H0016C9016500512H00C40165D501000F2H0008D801820100302H00F50181018F0100212H00D5010343003F2H00E501D60171001B2H00B2011C58004C2H000653DE010F2A3H002H0100270F2H002H010F1C3H00030500243H000100020F4H000100033H00017C00580F00022H0100580F00062H01020F4H00010F2A3H00010800580F00042H01020F4H00010F2A3H00010800192H008F01E201E0010F352H0002010300125H0085000401009D932H002DF4800D3H00ED18A7154B72D17744E84B11BB80073H00F453062898EEF4800E3H00811C5B64FF9BB17440F41181F5DA800C3H00C76A114C0873BA2829D2840F800B3H0073A69D2A4B7BE32C390706800A3H00B05F22EB393624AE5F1C800C3H000A310CC78C6D0E3D5F30E176123H00013H00083H00013H00093H00093H009CD17A050A3H000A4H0094831A0B3H000B3H00DDACEC370C3H000C3H0080005F7D0D3H000D3H00196AC6790E3H000E3H00396AC2660F3H000F3H00DBB40445103H00103H00A106E06C113H00113H009E2H4B24123H00123H007DAFEA2B133H00133H00013H00143H00163H00493H00173H00183H00013H00193H001A3H00493H001B3H001C3H00013H001D3H001D3H00493H001E3H00223H00014H00805C2D5DB0FC577BCB042H009A3C0100020F4H0020020F4H001F020F4H001E09524H00040F2A4H002H0F1C4H001200054H00E10100054H00E901000E2H008F01D5011E002D2H0077E001FC0100442H00491BFD0100342H00E201FD013A002A2H00B90149D10100252H00B101B901840100232H0089017ADC01020F4H001102404H0012020F4H00160F2A3H000105020F4H00010F2A3H00010F00270F00042H010F1C3H000309020F4H000200452H00042H0002504H00F63HFF0F00243H00012H00580F00072H01020F4H00010F2A3H00010F00270F000B2H0100453H00012H020F4H00F73HFF2H0F2A4H000A020F4H00EF3HFF0F00270F000203020F1C3H00050800243H000300021B3H0003E93HFF0F020F4H000E00125H000F2A3H000306020F4H00010F2A3H00032H0F2A3H000405020F4H00010F2A3H00040F00580F000F2H04020F4H00130F1C3H00060D00023H000304020F4H000100033H00038901020F4H00DA3HFF2H0F2A3H000306020F4H00010F2A3H00032H0F2A3H000405020F4H00010F2A3H00040F00580F000F2H04020F4H00010F2A3H00040F00580F000E2H04020F4H00010F2A3H00040F00580F2H002H04020F4H000900580F000E2H04020F4H00010F2A3H00040F00580F2H002H04020F4H00010F2A3H00040F00580F00102H0400580F0001052H020F4H00E43HFF0F00580F00102H04020F4H00010F2A3H00040F00580F0001052H020F4H00010F2A3H00052H0F1C3H00060300023H0003040F2A3H00030C020F4H00010F2A3H00030F00373H000300020F4H00CF3HFF0F0500072H00A7932H00B11F800C3H0046D5B4024B741968182196E380093H009AE9882E1B74DF70A680063H00A1C02F00FCCC658H00800D3H000B0A59CBC9D473D99EEEE14FA980073H005E6DCC72C6F4BA80143H00579625203B04BF8245C381FEABE82E83D8C3211280093H00A322F1B21B390E7CF580133H005AA9482C63C93B08C8EE11563F5111C44839D2800C3H00A7E6755CA639B600F1F22H0E80083H003B3A89EA678B1C7180113H00F37241F2C295C340845A32EB7350B9E11480073H00E2B1D0D30901A0656H00F0BF800E3H001B1A693B723C086BFD93A03E982D800A3H007DDC8B8E1E7FEBCBC8DD80133H0043C291019600C21FA4840F7B1CC2E7518ADFFF2A3H00013H00083H00013H00093H00093H00CDE1620E0A3H000A3H0006E8E4100B3H000B3H00D93AC76F0C3H000C3H00346A016E0D3H000D3H0099A2E5300E3H000E3H0053D8AC4E0F3H000F3H007F9A4942103H00103H00013H00113H00123H00653H00133H00153H00013H00163H001C3H00653H001D3H001E3H00013H001F3H00213H00653H00223H00233H00013H00243H00283H00663H00293H00293H00013H002A3H002A3H00683H002B3H002C3H00013H002D3H002D3H00683H002E3H002F3H00013H00303H00333H00693H00343H00353H00013H00363H00363H00693H00373H003C3H00013H003D3H003D3H00673H003E3H003F3H00013H00403H00403H00673H00413H00423H00013H00433H00443H00673H00453H00453H00693H00463H00473H00013H00483H00483H00693H00493H004A3H00013H004B3H004D3H00693H004E3H004E3H00673H004F3H00503H00013H00513H00513H00673H00523H00533H00013H00543H00563H00673H00573H00583H00013H00593H005A3H00684H004E5EE97C304FEF01CB042H00613C0100020F4H000F020F4H000E020F4H000D09524H00030F2A4H00090F1C4H000A00054H00E40100054H00EB0100262H00B30184014E00042H003EEF01900100462H0072290F00182H0056D601CB01000E2H000190013700382H00EA01CB011B002A2H0061AE01C20100282H005EE401F9010F2A4H000400270F00022H000F1C3H00020500246H00580F00013H00580F5H00580F00033H00270F00062H000F2A3H000207020F4H00010F2A3H000209003D3H000300020F4H00010F2A3H00030900453H002H0200096H00125H0044000400012H009E932H00990D800A3H00208FE61E657523C81DF3800C3H003E7D24648D9875CDF3DC2022800D3H0002A1A889170A691BF8782B6D6780083H0045AC3B0A6B9C964C80073H00DD845347A1B19980143H00F6755C87EA5123CC5CF8AB40EB825BDAEDF89870800D3H001231B85CE718E3E1EB4090DFBC80093H00D5BCCB68C5D17ACE580F3H00013H00083H00013H00093H00093H0055ADE27C0A3H000A3H00522F61240B3H000B3H00EBD9C5340C3H000C3H00CCB901740D3H000D3H00F93BD0110E3H000E3H00506D735B0F3H000F3H009CAB685D103H00103H007CCFDA35113H00113H00013H00123H00193H002A3H001A3H001B3H00013H001C3H001C3H002A3H001D3H001E3H00013H001F3H00213H002A4H007648F407443BE63ACB042H005C3C0100020F4H000F020F4H000E020F4H000D09524H00040F2A4H00070F1C4H000800054H00E00100054H00EC0100142H00AC0185014C00182H00094C3C00262H009D0149E60100032H005ABF01A20100482H00E201C901A50100452H00BC01D3014C000F2H009501E9013600052H00950163A1010F2A3H00010500580F00042H01020F4H00010F2A3H00010700580F2H002H0100580F00032H01020F4H00010F2A3H00010700580F00022H01001D2H0090016F6D0F352H00022H0100125H00CF000401009C932H0079BD800E3H0094633A98AF6BB5D8889C35DDD59A800C3H00BE3D4443C6B8D3E164328E5B800B3H00C221085E9F1B8348CDAF6E800C3H00CF4685E61F30DDF464ED2A67800A3H00F34A6994B871B911F66B80073H008168972HD00A88103H00013H00083H00013H00093H00093H00033910120A3H000A3H00C1C59C530B3H000B3H00FA688D550C3H000C3H00597581550D3H000D3H000826245F0E3H000E3H0009DC33220F3H000F3H0041E6C739103H00103H00B1D2B85D113H00113H00013H00123H00123H004D3H00133H00143H00013H00153H00163H004D3H00173H00183H00013H00193H00193H004D3H001A3H001C3H00014H003B436E13ED4F313ECB042H00783C0100020F4H0030020F4H002F020F4H002E09524H00030F2A4H00020F1C4H000C00054H00E20100054H00EB0100382H00A5012AB20100382H009F01CB0139001E2H00AA01B9014400232H002100CE0100382H00B5013FEF01002A2H00D5015F4E001D2H00E7017F8401020F4H002100126H00333H000200020F4H000100033H0002DB01020F4H00220F1C4H00070F2A3H000109020F4H000A00333H000200020F4H002H0F1C3H002H0300243H000100020F6H00580F00082H01020F4H00010F2A3H00010200580F003H01020F4H000400270F00022H01020F4H00F63HFF0F001D2H009001716D020F4H00EB3HFF0F00270F2H000201001D2H00F1012B27020F4H00EF3HFF0F00270F2H000201001D2H00F1012B27020F6H00333H000200020F4H000100033H0002B00100270F2H000201020F4H00F33HFF2H0F2A4H00050F1C3H00010A00225H000F2A4H000600310F02040100020F4H00DE3HFF0F020F4H00F93HFF0F4700052H00A1932H006D92800D3H00FAE13C009740774DA3E0A4631C80113H00ED58E79213E4B429CE3F2D792A1613A889800D3H00A8F79AD3914067393E5A85773180143H0023560D1D207B392H1EFA59FA412841587F2A5AEA9E80073H00173A2119ABF3FA80093H00F09F22BB4ECDD8254C80133H00270AB13D5139FBC3117F96C35D539B951BE33B800F3H001C5B2E4C6504213DF1B4EA96C7E40C80073H00D16C6BF19B9773659A5H99C9BF1A3H00013H00083H00013H00093H00093H00A517F13D0A3H000A3H00708D105C0B3H000B3H00A6CBE90D0C3H000C3H008B69944F0D3H000D3H006EE96D7E0E3H000E3H00E86659770F3H000F3H00931EE82A103H00113H00013H00123H00123H003E3H00133H00143H00013H00153H00153H003E3H00163H00183H00013H00193H001A3H003C3H001B3H001E3H003B3H001F3H00203H00013H00213H00243H003B3H00253H00263H003E3H00273H00293H003C3H002A3H002D3H003D3H002E3H002F3H00013H00303H00313H003E3H00323H00333H00013H00343H00353H00383H00363H00373H00393H00383H00383H00014H00E0751A2F6087C31ACB042H00553C0100020F4H0011020F4H0010020F4H000F09524H00040F2A4H00020F1C4H000300054H00E20100054H00E90100422H00B6011AF301000D2H004638EA014H00940180013D00162H000697012000182H00F4013D5C00562H00CF01299701001E2H00F401621A000D2H003E753F00522H00C1015A4100052H000179AE0100192H009601BA01B9010F2D3H00012H00125H00FB0003010097932H00B9F380093H0092F1986F725578B1F00C3H00013H00083H00013H00093H00093H00CD4C44760A3H000A3H00A5055E7E0B3H000B3H00877ECF470C3H000C3H00837D682F0D3H000D3H003A7FDA090E3H000E3H00D8F94A460F3H000F3H00DF4BDA71103H00103H00FEDB0F18113H00113H00B9A58861123H00123H005170C557133H00153H00014H00F5F6A90DB5229172CB042H00583C0100020F4H000D020F4H000C020F4H000B09524H00040F2A4H00060F1C4H000700054H00E40100054H00EE01002E2H002E3D8B01002E2H009301E9010D00592H00BF01750D00452H002142800100132H00FA019D015B001D2H00FF0155C4010F2A4H002H020F4H00010F2A4H000600270F00012H000F1C3H00020300246H00580F5H00270F00043H00226H00125H004200032H009B932H007D5580113H0009D4F3D3E51AC99B86E5AA300C8EB576D1800D3H00A483669A5AE1F890D55B922ECA80073H000FC229A98B279B80143H000857EAAD849B251E525ADD6AA5A8EDB823CA9EBA800D3H00AC6BAEEE297AF54B858A261D72093H00013H00083H00013H00093H00093H00E2A11E720A3H000A3H00E8A1833E0B3H000B3H007E0B550A0C3H000C3H00F733041A0D3H000D3H005739293F0E3H000E3H009B125D460F3H00113H00013H00123H00183H00264H00C754FF215AD49725CB042H006F3C0100020F4H000E020F4H000D020F4H000C09524H00050F2A4H00080F1C4H001400054H00E20100054H00EA01001D2H0071D701F801000E2H009E017EC10100052H0039F6019A0100522H00F501AC0140000E2H005A3EE10100172H00097547000D2H0079D401570F2A4H0005020F4H00010F2A4H000800580F4H00020F4H00010F2A4H000800580F00072H00020F4H00010F2A4H000800580F00103H00580F000F2H000F2A3H000112020F4H00010F2A3H00010800580F00062H010F1C3H00020D0F1C3H00030E0F1C3H0004090F1C3H0005020F1C3H0006040F1C3H00070C0F1C3H0008010F1C3H0009110F1C3H000A0B0F1C3H000B0A0F1C3H000C030F1C3H000D0800433H00010D020F4H000100033H0001D0010F352H0001001200125H0093000E2H00A9932H004DA4800A3H00773AE1E3ED3600E6E38C65A15EEB2HFFEF583E656711BF9F70FFEFBF6509E03EE075C5A5BF65737F2280454D40BF80073H0029C46381FBD70380063H000A716CC1A0D4800E3H00A08F725083AF4DF874180595F9CE650EA701C007F8EFBF65219418801D2H1E4065EDA3B17F20F5873F65DD5C3C40D7C5A53F65CA23670194EF87BF651A0448BF05EA9ABF657395F61FFC8C1FC080133H00EE05F04546B0EE4B8CECB30FFCC28BD5A29763800C3H00AF12D995FA23D47F11969BE46500E9D5DF96F8EFBF80093H001B8E251A7593566406113H00013H00083H00013H00093H00093H0076FEE7260A3H000A3H00E3EB93620B3H000B3H008AD5F4440C3H000C3H00431B28500D3H000D4H001BE06B0E3H000E3H000A09FC4F0F3H000F3H00EC3DE501103H00123H00013H00133H00133H00333H00143H00153H00013H00163H00163H00333H00173H00183H00013H00193H001A3H00333H001B3H001D3H00013H001E3H002B3H00333H002C3H002F3H00014H00813D0100020F4H00BA2H020F4H00B92H020F4H00B80209524H002H0F2A4H00060F1C4H004A00054H00E40100054H00ED01003A2H00532B0400162H002BB6014B4H00DE01592600062H008201FA01B30100162H00B301B8016C000F2H00DA01FB01FD0100482H00C901DD014400032H00F6011F950100462H00E9010E2D020F4H00A9020F2A3H00104C00580F00262H10020F5H000F2A3H001143020F4H00010F2A3H00110600580F0003120F020F4H00010F2A3H00120600333H001000020F4H008F0200270F00440D080F1C3H000F3D00333H000D2H00270F00150D080F1C3H000F150F2A3H0010430F1C3H00110B0F1C3H00121509523H00130100433H000D07020F4H000100033H000DEF0100270F00250E080F1C3H00103109523H00110300023H000E04020F4H000100033H000E1B00270F00250E080F1C3H00101709523H00110200023H000E04020F4H000100033H000E4B00270F00250E080F1C3H00100009523H00110500023H000E04020F4H000100033H000E6500126H00243H000200020F4H000100033H00024B00580F00453H020F4H00010F2A3H00020600580F00373H020F4H001F00270F003A2H010F1C3H00032800243H000100020F4H001100543H00012H00580F001B0201020F4H00010F2A3H00020600580F00362H0200580F00402H020F110F002H0204020F4H000E00580F00372H020F352H00020122020F4H00DD010F352H00010023020F4H002800083H000100020F5H000F110F002B013E020F4H003000580F00162H01020F4H00010F2A3H00010600270F00322H01020F4H00EA3HFF0F00580F001B0201020F4H00010F2A3H00020600580F00483H020F4H000E00580F002D3H020F4H00010F2A3H00020600580F00013H020F4H00010F2A3H00020600580F00092H0200270F002C2H020F1C3H00041900243H000200020F4H000100033H0002380F352H00020127020F4H001300580F00403H020F4H00010F2A3H0002060F110F001A02040F2A3H000242020F4H00010F2A3H00020600580F00213H020F4H00010F2A3H00020600580F00453H020F4H00D33HFF2H0F2A3H000142020F4H00C53HFF2H0F110F004701200F2A3H00024200270F003A2H020F1C3H000421020F4H00B83HFF2H0F110F0008012H0F110F003C0105020F4H00CC3HFF0F00085H00020F4H00CC3HFF2H0F110F0019010E020F4H00F43HFF2H0F2A4H004200580F00382H00020F4H00010F2A4H000600580F00122H00020F4H00010F2A4H000600270F00303H00225H00020F4H00F23HFF0F00223H000700020F4H00930100433H002H06020F4H000100033H00067B00270F002507050F1C3H00092F09523H002H0A020F4H002500083H000500020F4H00860109523H000B09020F4H00F53HFF0F09523H000A2H00023H000704020F4H000100033H00072F00270F002507050F1C3H00090609523H000A0B020F4H005E00433H000C09020F4H004709523H002H08020F4H00E73HFF2H0F1C3H00051F00453H002H03020F4H000100033H000375005A3H000200020F4H000100033H0002C501004F3H000200020F4H000100033H00023300270F001E032H020F4H00E43HFF2H0F2A3H00034200270F004D2H03020F4H00F13HFF2H0F1C3H000935020F4H00E33HFF2H0F1C3H001218020F4H005600243H000900020F4H002600023H00070400270F00250705020F4H00570F1C3H00091300243H00072H00270F00340807020F4H00160F1C3H00083300323H000900020F4H001A0F1C3H0011240F1C3H0012230F1C3H001318020F4H00530F1C3H000F240F1C3H00101C020F4H00F93HFF2H0F110F002A052E00243H000300020F4H000100033H00036D00270F001D04030F1C3H00064B00243H000400020F4H000100033H00045100270F003405040F1C3H000714020F4H002D0F1C3H000A1400243H000800020F4H000100033H0008850100270F001D09030F1C3H000B45020F4H00DA3HFF2H0F1C3H002H0A020F4H00B73HFF0F00270F00340A090F1C3H000C1400243H000A00020F4H000100033H000A4B00270F00180B0A0F1C3H000D4A0F1C3H000E110F1C3H000F1C020F4H001200083H000D000F2D3H000D43020F4H000D0F2A3H000210020F4H00C23HFF0F00270F000D2H0E020F6H00453H000E2H020F4H00260F2A3H000E42020F4H00010F2A3H000E0600270F003A2H0E0F1C3H00102800243H000E00020F4H001D0F2A3H000D46020F4H00F73HFF2H0F1C3H0010110F1C3H001123020F4H00B73HFF0F00023H000704020F4H000100033H0007CA010F2A3H000729020F4H009F3HFF0F00243H00052H00323H0006000F2D3H00063B00270F000A0605020F4H00B83HFF0F00023H000704020F4H000100033H00070600270F00250705020F4H00A63HFF0F09523H00130400433H000B09020F4H000100033H000B9B0100270F00180C0A020F4H000B0F1C3H00093F09523H000A06020F4H00F23HFF0F00580F00412H0E020F4H00D63HFF0F00452H00040D0002503H000D0809523H001407020F4H00843HFF2H0F110F00390503020F4H00AC3HFF2H0F1C3H000E49020F4H00A73HFF0F00270F001D0703020F4H009A3HFF0F02403H000DE5FD2HFF0F020F4H00EFFD2HFF0F00310F0207012H020F4H00060F2A3H00020C00373H000200020F4H000100033H00022C00580F00220201020F4H00F83HFF0F020F4H00BF3HFF2H0F1C3H000212020F4H000500270F002C2H00020F4H00FC3HFF2H0F2A4H004200580F00382H00020F4H00FB3HFF0F00245H00021B4H00C7FE2HFF0F020F4H00CAFE2HFF0F2700152H00E4932H00D9F580113H0076759C883563888EE721BC7F502C19796E80083H00A54CDBE9C86A493B80093H003D24F3BD3E2FAA8B5880073H00FC0BC2C5A0166880073H006DD423B031189C80073H008605AC80A0AA9D800D3H0087DE9D254936C92HAA2564F0AF7B8C800A3H0022418864762H01C22F1B80093H0060CFE634BBE3BF1491804H0080073H00E73EFDD04C0E7D800E3H0010FF9675AB6EB58207EEA2702B1480083H00DA39C0477CDFDDCE80073H0032D19880BD4FF3800D3H00138A694766B2E950F5B904452E656H0030C0800A3H004E8DF46AFB2C5936C72C80083H00CC5B92583907D4B5800D3H00A473EA3D0DA53688CE35D483A4800B3H00D7AEED6B27B091BBCA38E7800B3H002CBBF245EFE4709FC42H97800F3H0029301F6D1A6AE8ED8EA14BDE82DBF780093H00FA59E0EB882DECE5B680113H00F1B86794B775B8AE405D759B96537C400180063H0068976E5517EE80083H005AB940E13B9E78E2655H00408FC080063H00B2511820318280063H00C4930A97828A804A3H0076759C02B24E8E01ACBDD13897AD90A5CFF6D6FF840F0D57A4F1118482FFD01628815187A958929DB9B69CEB9AF691AFC4235D21CB8F0EC1BB341118DB365780354D530BAFD4D101797E800A3H0034837A76DA308055623E800A3H00D27138D0600DA9DD1E2F80093H0010FF962D3223BE138F656H00F0BF656H0049C080093H0017EE2DF80BBE3AAD6080093H0046C56C1647B4180D1580083H005D441386F23D116D80143H00F51C2B9D04BFC9963ABED12A757CC1B02B9EF24A80083H0031F8A73D5A6745A0800D3H00C9D0BF3E8F102338198148880B80183H0054A39AE6E126103B35D01C6B055BE1A477F24A950DCD9AA080113H00DCEBA2433A0F4F73E2DBA041C01962292F800C3H001B52F1CFE0CF7836F603B599800F3H007F1615C3981D4BF015ED20C666572A80133H0040AFC64686419D385336A13EE054E88A2D2ED5800A3H00759CABF38CD499653E9E800A3H00C3BA195C77D43BBC0E7E80083H00B17827A6C72E2570800B3H0049503F7DC924C7FA2DBA3D800A3H002E6DD4222H4EDF601C63800D3H00AC3B72D9070A027EA51A93D1FC80073H009F3635D1AAFF03800C3H0088B78E18007D89355E4B8DC1800A3H000C9BD2B270670A4E5ADC801F3H002A0910B9525396B76C52552F463A2A22D68D64F8D8132572962H53D9D774B1800D3H00138A6946AE69004C115B92122E80093H004E8DF4C4EBA231AAA9801A3H0025CC5BE1B77BB048561ECD4A21E9CE74A6228DE56C90A1C93689800C3H00A39AF95CC4BFF32276879229800B3H00075E1D5622334BBC5325BA80103H00DCEBA26E567195409BF646895901EEE480083H008C1B522DDE29AB6480073H006433AAEA3BB6D580073H00153C4BF2E244D680073H006EAD142889C8EB80083H00AFC645BF10D9F837800E3H00C71EDD16B1692FEE5E6E5F635B3880083H0081C8F791B684AD9A656H0032C080083H0019A00F1A117B0424800C3H00B17827558C12D51F5E18F08D800C3H00D5FC0BF9E37A51DDDAA3B76A80073H0079006FA042709D80083H007211D8BCC5465445800A3H00CAA9B0D9BFB1FBCEC6518D3H00013H00083H00013H00093H00093H0009075F6C0A3H000A3H000CF2EC710B3H000B3H005D733E600C3H000C3H002C22AD3E0D3H000D3H0030A9434C0E3H000E3H000AF2D5370F3H000F3H0004395845103H00103H0057AA4772113H00113H00C200B33F123H00133H00013H00143H00163H00523H00173H00183H00013H00193H00193H00523H001A3H001B3H00013H001C3H001D3H00523H001E3H00203H00553H00213H00273H00573H00283H00293H00013H002A3H002D3H005D3H002E3H002F3H00013H00303H00333H00613H00343H00353H00013H00363H00393H00643H003A3H003B3H00013H003C3H003C3H00643H003D3H003D3H000B3H003E3H003F3H00013H00403H00403H000B3H00413H00423H00013H00433H00443H000B3H00453H00493H00113H004A3H004A3H00123H004B3H004C3H00013H004D3H004E3H00123H004F3H00503H00013H00513H00513H00143H00523H00533H00013H00543H00553H000B3H00563H00593H00013H005A3H005A3H00113H005B3H005C3H00013H005D3H005E3H00113H005F3H005F3H00133H00603H00613H00013H00623H00633H00133H00643H00643H000B3H00653H00663H00013H00673H00673H000B3H00683H00693H00013H006A3H006D3H000B3H006E3H006F3H00013H00703H00713H000B3H00723H00723H00133H00733H00783H00013H00793H00793H00143H007A3H007B3H00013H007C3H007D3H00143H007E3H007F3H000B3H00803H00813H00013H00823H00873H000B3H00883H008C3H00013H008D3H008D3H00033H008E3H008F3H00013H00903H00903H00033H00913H00923H00013H00933H00953H00033H00963H00973H00363H00983H00983H00213H00993H009A3H00013H009B3H009E3H00253H009F3H00A03H00183H00A13H00A23H00213H00A33H00A43H002D3H00A53H00A63H00013H00A73H00AA3H00323H00AB3H00AC3H004C3H00AD3H00AE3H00323H00AF3H00B03H00173H00B13H00B23H00013H00B33H00B33H00173H00B43H00B53H00013H00B63H00B63H00173H00B73H00B83H00013H00B93H00BA3H00183H00BB3H00BB3H00013H00BC3H00BD3H00173H00BE3H00BF3H002D3H00C03H00C13H00483H00C23H00C33H00453H00C43H00C43H00253H00C53H00C63H00293H00C73H00C83H00423H00C93H00CA3H00433H00CB3H00CD3H00213H00CE3H00D43H004C3H00D53H00D63H00183H00D73H00D83H00013H00D93H00DB3H001D3H00DC3H00DD3H00013H00DE3H00E03H001E3H00E13H00E23H00433H00E33H00E43H00013H00E53H00E73H00453H00E83H00E93H00213H00EA3H00EC3H00463H00ED3H00EE3H00013H00EF3H00F33H00483H00F43H00F83H00013H00F93H00FC3H00513H00FD3H00FF3H00014H00012H0003012H00513H0004012H0005012H00013H0006012H0008012H00483H0009012H0009012H00323H000A012H000B012H00013H000C012H000D012H00323H000E012H000E012H001E3H000F012H0010012H00013H0011012H0012012H00213H0013012H0013012H00293H0014012H0015012H00013H0016012H0017012H002D3H0018012H0019012H00483H001A012H001B012H00013H001C012H001D012H004C3H001E012H0020012H00293H0021012H0024012H00513H0025012H0026012H004C3H0027012H0028012H00183H0029012H002A012H004C3H002B012H002C012H00423H002D012H002E012H00513H002F012H0030012H00153H0031012H0031012H00013H0032012H0032012H00153H0033012H0034012H00013H0035012H0037012H00153H0038012H003B012H00023H003C012H003C012H00013H003D012H0041012H00023H0002593C0100020F4H000D020F4H000C020F4H000B09524H00050F2A5H000F1C4H000100054H00E00100054H00EC01004D2H00E501237900452H00A4018101930100522H00C0010C4E00562H00EC01475500072H0023AB01BD01002E2H00D101032709526H00375H0009524H00010F2D5H000F2A5H000F2D3H00012H00103H00012H00455H00020F4H000100034H005C000E2H00342H753400022H0097932H00D1DEDFE1C4FE5HFF4H0002";GM=0X1;else I=EM;GM=0X00000;end;end;else do if not(GM<=0)then if GM~=0X1 then N=p(o(N,0X5),'\.\.',function(uc)if w(uc,2)~=0x48 then local Tb=(e(v(uc,16)));if not(a)then return Tb;else local tC=(0);local xC=nil;do repeat do if not(tC<=0X0)then if tC==0X1 then return xC;else a=YM;do tC=0X1;end;continue;end;else do xC=F(Tb,a);end;tC=0X00002;continue;end;end;until false;end;end;else local A9=(0);while true do if A9==0X0 then a=v(o(uc,0X1,1));A9=1;else return"";end;end;end;end);do GM=0X5;end;do continue;end;else c=z-0X1;GM=0x3;end;else do u={0X01,2,0X3};end;break;end;end;end;until false;GM=0x02;local r,x,y=nil,nil,(nil);while GM~=3 do do if GM<=0 then y=coroutine.wrap;do GM=0X3;end;continue;else do if GM~=1 then r=function()local SJ=(nil);for je=0X00000,1 do do if je~=0X00 then s=s+0X01;else SJ=w(N,s,s);do continue;end;end;end;end;return SJ;end;GM=0X1;else x=2147483648;do GM=0;end;continue;end;end;end;end;end;local O=hM;local T,R=assert,x-iM;do local ql=(nM);do for wn=0X1,31 do(f)[wn]=ql;ql=ql*2;end;end;end;local A=function()local nU=(0);local eU,KU=nil,(nil);do while"\1149\]\056"do if not(nU<=0)then if nU~=0X0001 then s=KU;nU=1;continue;else return eU;end;else do eU,KU=h("<I4",N,s);end;do nU=2;end;end;end;end;end;GM=0X0000;local P,U=nil,nil;repeat do if GM~=0X0 then U=WM;break;else P=function()local oC,KC=nil,(nil);local TC=(0);repeat if not(TC<=0x000)then do if TC~=0X1 then do return oC;end;else s=KC;TC=2;continue;end;end;else do oC,KC=h("<i8",N,s);end;TC=0X00001;end;until false;end;do GM=0X1;end;end;end;until false;local E=(unpack);do GM=0X00000;end;local J,j,L,M,K=nil,nil,nil,nil,(nil);repeat do if GM<=1 then if GM~=0X00000 then M=sM.rshift;GM=0X03;do continue;end;else J=function(xe,ke,Ee)local le=nil;for mL=0,2 do if mL<=0X0 then le=(xe/f[ke])%f[Ee];else do if mL~=0X01 then return le;else do le=le-le%1;end;end;end;end;end;end;GM=0X0004;end;else if not(GM<=0X002)then if GM==0X3 then K=NM;GM=5;continue;else do j=function()local oB,aB=h('\<\100',N,s);s=aB;return oB;end;end;do GM=2;end;do continue;end;end;else L=gM;GM=1;continue;end;end;end;until GM>=0X5;GM=0x1;local Z,Q=nil,nil;repeat do if GM~=0x00000 then Z={[0X001]=aM,[rM]=0.6688607528885397,[0]=0x2,[7]=AM,[9]=false,[0X0008]=-971325051,[2]="\124\084\074\}\A3A",[4]=2,[xM]=0.7597462896951117,[0X0008]=0.6632130039578866,[8]=0X00004F987e0E,[3]=true,[6]=zM,[0X9]=3,[1]=0X00005,[7]=816337193,[8]=true,[8]="\w|\119\!\069\{t\M",[0X9]=6,[0X8]=7,[3]=0X4,[0X8]=iM,[nM]=0x378614F,[0X8]=0X2,[7]=7,[0X2]=7,[0X006]=0x04};GM=0x000;continue;else do Q=function()local lP=(0X00000);local pP=0x0;repeat local io=w(N,s,s);s=s+1;lP=K(lP,I(G(io,0X00007F),pP));do if G(io,128)==0X00 then do return lP;end;end;end;pP=pP+7;until false;end;end;GM=0X2;end;end;until GM>1;local q=(r());local S=(r());GM=0X2;local TM,BM,vM,d,bM,mM,C,i,V=nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat if GM<=0X04 then do if GM<=0X001 then if GM~=0 then C=fM;GM=0x6;else d=function()local CD=(Q());if not(CD>R)then else return CD-z;end;return CD;end;GM=8;continue;end;else do if not(GM<=0x00002)then if GM==3 then vM=function(...)return b("#",...),{...};end;GM=0x0;continue;else V=0X2^0X34;do GM=7;end;end;else TM=function(lD)local ZD=0X1;local JD,LD,GD=nil,nil,(nil);do repeat do if not(ZD<=0)then if ZD==0X1 then JD={w(N,s,s+3)};do ZD=0x00;end;else GD=t(JD[nM],S);do break;end;end;else LD=t(JD[0x1],S);ZD=2;continue;end;end;until(false);end;local CD=(t(JD[3],S));local QD=t(JD[0X00004],S);S=(0X45*S+lD)%256;ZD=0x00;while 0X489A3369 do if ZD==0X0 then do s=s+4;end;ZD=0x1;continue;else return QD*VM+CD*0X00010000+GD*256+LD;end;end;end;GM=0X009;end;end;end;end;else do if GM<=0X00006 then if GM~=5 then i=JM;do GM=4;end;else mM={};GM=1;end;elseif not(GM<=7)then if GM==8 then bM=function(CJ)local xJ,vJ,RJ=4,nil,nil;while(true)do if not(xJ<=1)then if not(xJ<=0X2)then if xJ==0X003 then RJ="";do xJ=0X0;end;continue;else vJ=A();xJ=0X3;end;else return RJ;end;else if xJ~=0x0 then s=s+vJ;xJ=0x2;else for rC=iM,vJ,7997 do local uC,aC=nil,nil;for QU=0x0000,0X2 do do if not(QU<=0)then if QU==1 then do if not(uC>vJ)then else uC=vJ;end;end;else aC={w(N,s+rC-0X1,s+uC-1)};continue;end;else uC=rC+0X001f3D-0X1;continue;end;end;end;local XC=0X1;do while XC<2 do do if XC==0 then RJ=RJ..e(E(aC));XC=0X2;continue;else for i4=1,#aC do local S4=(0X0);repeat if S4~=0x0000 then q=(CJ*q+cM)%RM;S4=2;continue;else do aC[i4]=t(aC[i4],q);end;do S4=1;end;end;until S4==2;end;XC=0;do continue;end;end;end;end;end;end;xJ=1;end;end;end;end;do GM=0X05;end;else BM={};GM=0x3;end;else GM=10;continue;end;end;end;until GM==10;do GM=0X04;end;local UM,oM,wM=nil,nil,nil;do repeat if GM<=2 then if GM<=0X000 then do BM[0X004]=mM;end;GM=2;else if GM==0X1 then function oM()local Wf,Mf=nil,(nil);for sX=0,0X02 do do if not(sX<=0X0)then if sX==0X001 then Wf={};else do Mf={};end;continue;end;else end;end;end;local Rf,Of,Pf={nil,YM,{},{},{},YM,nil,nil,nil},nil,(nil);for no=0X0000,0X3 do if no<=1 then if no~=0 then Rf[0XF]=A();else do Of=1;end;continue;end;elseif no~=2 then do Pf=A()-1227;end;continue;else Rf[17]=A();end;end;local Ef=(Rf[5]);for rk=0,Pf-0X1 do Ef[rk]=oM();end;local df,Xf,cf=nil,nil,nil;do for vt=0X0,0X00007 do do if vt<=3 then if vt<=1 then if vt~=0 then Xf=A()-0X13c40;continue;else df={};do continue;end;end;else if vt~=2 then for lx=1,Xf do(cf)[lx]={[PM]="!!",[0x003]=0.18993462319693322,[4]=r(),[0X1]=-0x36841F79,[0X6]=Q(),[7]=r(),[5]=r(),[2]=d(),[0X01]=d(),[0X3]=d()};end;do continue;end;else cf=Rf[0x3];continue;end;end;else do if vt<=0x00005 then if vt~=4 then(Rf)[0X0001]=Q();else(Rf)[0X0000E]=r();end;else if vt~=6 then Rf[0x00009]=Q();continue;else Rf[0X00006]=Q();end;end;end;end;end;end;end;local Tf,wf,zf,Gf=0,nil,nil,nil;repeat if Tf<=2 then if Tf<=0X00000 then(Rf)[0x7]=Mf;Tf=6;else if Tf~=1 then do wf=A()-37782;end;Tf=4;continue;else Gf=r()~=0;do Tf=3;end;continue;end;end;else if Tf<=4 then if Tf~=3 then do zf=r();end;do Tf=0x1;end;continue;else for nK=iM,wf do local GK,iK,gK=nil,nil,nil;local pK=(5);while(true)do if not(pK<=3)then if pK<=0X5 then if pK~=4 then GK=r();pK=0X6;continue;else Of=Of+1;pK=0X0;end;else if pK~=0X0006 then(Wf)[nK-1]=Of;do pK=0X2;end;do continue;end;else iK=YM;do pK=7;end;end;end;else if not(pK<=0x1)then if pK~=2 then do(df)[Of]=gK;end;pK=4;continue;else if GK==0X80 then iK=o(bM(zf),4);elseif GK==49 then iK=o(bM(zf),20);elseif GK==0x65 then iK=j();elseif GK==0X7b then iK=jM;elseif GK==0x000b1 then iK=o(bM(zf),j()+A());elseif GK==0x0D7 then iK=o(bM(zf),r());elseif GK==158 then iK=false;elseif GK==249 then iK=j()+A();elseif GK==124 then iK=j();elseif GK==0x00ee then iK=P();elseif GK~=223 then else iK=P();end;do pK=0x1;end;continue;end;else if pK==0X00 then if not(Gf)then else do for wL=0,0X1 do if wL==0X0 then mM[kM]=gK;else kM=kM+1;continue;end;end;end;end;break;else gK={iK,{}};pK=3;end;end;end;end;end;Tf=0X5;end;else if Tf~=5 then for km=1,Q()do(Mf)[km]={r(),Q()};end;Tf=0X00002;else for MD=iM,Xf do local LD,gD=0X0000,(nil);while LD<0X02 do if LD~=0 then for EL,gL in tM(u)do local wL,cL=nil,nil;for Bx=0,2 do if Bx<=0X0 then wL=Z[gL];else if Bx==0x1 then cL=gD[wL];else if cL==0XF then local ci=Wf[gD[gL]];local vi=(df[ci]);if not(vi)then else local Et=(nil);for ta=0,2 do do if ta<=0X000 then(gD)[wL]=vi[1];continue;else do if ta~=1 then do Et[#Et+1]={gD,wL};end;continue;else Et=vi[2];continue;end;end;end;end;end;end;elseif cL~=0x002 then else(gD)[gL]=MD+gD[gL]+iM;end;end;end;end;end;LD=0X2;continue;else gD=Rf[0x3][MD];LD=1;do continue;end;end;end;end;break;end;end;end;until(false);Tf=0X3;local jf,af=nil,(nil);while 0.29015302426935696 do do if Tf<=0X2 then do if not(Tf<=0)then if Tf~=1 then Rf[2]=J(af,0X2,1)~=0X000;Tf=4;else for qy=1,jf do local sy=A();local Ry=(A());local Gy=(nil);local Py=0X0;while'4\101'do do if Py~=0X0 then for NH=sy,Ry do Rf[0X0004][NH]=Gy;end;do break;end;else Gy=A();Py=1;end;end;end;end;Tf=0X0005;do continue;end;end;else do(Rf)[8]=J(af,1,1)~=0;end;Tf=0X00002;end;end;else do if not(Tf<=3)then if Tf~=0X00004 then af=r();Tf=0;else return Rf;end;else do jf=A();end;Tf=0X1;do continue;end;end;end;end;end;end;end;GM=0X005;else mM=YM;GM=0X3;continue;end;end;else if not(GM<=3)then if GM==4 then function UM(C6,w6,Q6)local g6=(w6[8]);local N6=w6[2];local Y6,M6=w6[0x00009],w6[0X00006];local W6=w6[0X0004];local k6,z6=w6[0x3],(w6[5]);local K6=C({},{__mode="\118"});local d6,D6=w6[0X0001],nil;D6=function(...)local oQ=(1);local NQ=({});local KQ=W();local IQ,tQ=vM(...);IQ=IQ-0X0001;local WQ,MQ=0X00000,((KQ==g and C6 or KQ));for C5=0X0,IQ do do if not(Y6>C5)then do break;end;else do(NQ)[C5]=tQ[C5+0X0001];end;end;end;end;(BM)[0X001]=w6;(BM)[2]=NQ;if not g6 then tQ=nil;else if N6 then NQ[Y6]={n=IQ>=Y6 and IQ-Y6+1 or 0X0,E(tQ,Y6+0X1,IQ+0X1)};end;end;do if MQ~=KQ then(i)(D6,MQ);end;end;local eQ,HQ,nQ,yQ=m(function()do repeat local Xb=k6[oQ];local bb=(Xb[0X0006]);do oQ=oQ+1;end;if bb<45 then if not(bb<22)then if bb<0x21 then do if bb>=0X1b then if bb<0x1E then if bb>=28 then if bb~=0X001D then do NQ[Xb[1]]=Xb[0X0004];end;else if Xb[0x002]==241 then oQ=oQ-1;k6[oQ]={[1]=(Xb[0x1]-0X0027),[0X3]=(Xb[3]-0X000027),[6]=0x30};elseif Xb[0X002]~=0X90 then repeat local VQ,aQ=K6,NQ;if not(#VQ>0)then else local TW={};for Ge,be in H,VQ do for lq,pq in H,be do if pq[0x00001]==aQ and pq[2]>=0 then local Jy=(pq[2]);if not(not TW[Jy])then else do TW[Jy]={aQ[Jy]};end;end;pq[0X1]=TW[Jy];pq[2]=1;end;end;end;end;until true;local mp=Xb[0X00001];do return false,mp,mp+Xb[0x3]-0x2;end;else oQ=oQ-0X1;(k6)[oQ]={[0x6]=0X30,[1]=(Xb[1]-0X6D),[3]=(Xb[3]-0x006d)};end;end;else do if Xb[2]==38 then do oQ=oQ-0X1;end;k6[oQ]={[0x0003]=(Xb[3]-0XcE),[0X1]=(Xb[0X1]-0XcE),[6]=14};else do if not(not NQ[Xb[0x0001]])then else oQ=Xb[0X03];end;end;end;end;end;else if not(bb>=0X01f)then local u6=(Xb[3]);local A6=(NQ[u6]);for Fa=u6+1,Xb[2]do do A6=A6..NQ[Fa];end;end;(NQ)[Xb[1]]=A6;else do if bb~=32 then local Je=(Xb[1]);local ze,Xe=NQ[Je]();if ze then oQ=Xb[3];(NQ)[Je+0X3]=Xe;end;else local Sj=Xb[0x1];local ij=(y(function(...)Y();do for PN in...do(Y)(true,PN);end;end;end));(ij)(NQ[Sj],NQ[Sj+1],NQ[Sj+2]);WQ=Sj;(NQ)[Sj]=ij;oQ=Xb[3];end;end;end;end;else if bb>=24 then if not(bb<25)then if bb==26 then do NQ[Xb[1]]=NQ[Xb[0X03]]<NQ[Xb[0X0002]];end;else if Xb[2]==65 then oQ=oQ-1;do(k6)[oQ]={[0X3]=(Xb[0X3]-84),[6]=16,[1]=(Xb[1]-0X0054)};end;elseif Xb[0X2]==0x008F then oQ=oQ-0X1;(k6)[oQ]={[0X003]=(Xb[0x3]-0X0E0),[6]=48,[1]=(Xb[0X1]-0Xe0)};elseif Xb[0X2]~=0X96 then if NQ[Xb[1]]then oQ=Xb[0X3];end;else do oQ=oQ-0x1;end;(k6)[oQ]={[0x1]=(Xb[0X1]-185),[3]=(Xb[3]-0X00b9),[6]=48};end;end;else if NQ[Xb[0X3]]==NQ[Xb[2]]then oQ=Xb[1];end;end;else if bb==0X17 then(NQ)[Xb[1]]=t(NQ[Xb[0x0003]],NQ[Xb[0X2]]);else do(NQ)[Xb[0X001]]=NQ[Xb[3]]==NQ[Xb[2]];end;end;end;end;end;elseif bb>=0X000027 then if not(bb<42)then do if not(bb>=43)then do NQ[Xb[1]]=MQ[Xb[0x4]];end;else if bb==44 then do repeat local fF,yF=K6,(NQ);do if not(#fF>0)then else local yE=({});for pv,Pv in H,fF do for Pn,en in H,Pv do do if en[1]==yF and en[0x2]>=0X0 then local LE=(en[2]);if not(not yE[LE])then else(yE)[LE]={yF[LE]};end;do en[0x001]=yE[LE];end;en[2]=1;end;end;end;end;end;end;until true;end;do return true,Xb[0X0001],0;end;else do NQ[Xb[0X00001]]=not NQ[Xb[3]];end;end;end;end;else if not(bb>=40)then local Jt,Wt=Xb[1],(NQ[Xb[0X0003]]);(NQ)[Jt+1]=Wt;NQ[Jt]=Wt[Xb[7]];else if bb==0X000029 then NQ[Xb[0X1]]=NQ[Xb[3]][NQ[Xb[2]]];else local yB=Xb[0X1];local WB=(y(function(...)(Y)();for a1,Q1,O1,v1,C1,m1,d1,b1,y1,z1 in...do(Y)(true,{a1,Q1,O1,v1,C1,m1,d1,b1,y1,z1});end;end));WB(NQ[yB],NQ[yB+1],NQ[yB+0x2]);WQ=yB;NQ[yB]=WB;oQ=Xb[0X3];end;end;end;else if bb>=0x24 then if bb>=0X00025 then do if bb==38 then local rV=Xb[0x00001];local FV,TV,hV=NQ[rV],NQ[rV+0X1],(NQ[rV+0X002]);NQ[rV]=y(function()do for PI=FV,TV,hV do(Y)(true,PI);end;end;end);oQ=Xb[0x0003];else(NQ)[Xb[1]]=M(NQ[Xb[0X03]],NQ[Xb[0X2]]);end;end;else local Os=Xb[0X0001];(NQ)[Os]=NQ[Os](NQ[Os+0X01],NQ[Os+2]);WQ=Os;end;else if not(bb<0X000022)then do if bb~=35 then local XK=Xb[0X1];NQ[XK](NQ[XK+1]);WQ=XK-1;else local Dj=Xb[0X0001];local wj,sj=NQ[Dj]();do if not(wj)then else for vf=0X0001,Xb[2]do(NQ)[Dj+vf]=sj[vf];end;oQ=Xb[0X0003];end;end;end;end;else NQ[Xb[1]]=NQ[Xb[0X3]]~=NQ[Xb[2]];end;end;end;else do if bb<11 then if not(bb>=0X5)then do if bb<0X2 then do if bb~=0X01 then NQ[Xb[1]]=I(NQ[Xb[3]],NQ[Xb[0X2]]);else local U7=(Xb[0X001]);local s7,p7=NQ[U7]();do if not(s7)then else NQ[U7+0x1]=p7;oQ=Xb[0X3];end;end;end;end;else if bb<0X00003 then local Kc=(Xb[0X01]);WQ=Kc+Xb[3]-0X001;(NQ[Kc])(E(NQ,Kc+0x1,WQ));WQ=Kc-1;else if bb==0X4 then local ci=Xb[0X1];local Ci,Di=NQ[ci],(Xb[2]-1)*50;for da=1,Xb[3]do(Ci)[Di+da]=NQ[ci+da];end;else if Xb[0X2]~=0X0000de then for Be=Xb[1],Xb[3]do NQ[Be]=nil;end;else oQ=oQ-1;do k6[oQ]={[1]=(Xb[1]-0X009B),[0X6]=71,[0X003]=(Xb[0X3]-155)};end;end;end;end;end;end;else if not(bb<0X08)then do if not(bb>=9)then do NQ[Xb[0x001]]={};end;else if bb~=0x000a then local CK=(Xb[1]);NQ[CK](E(NQ,CK+1,WQ));WQ=CK-1;else local iQ=Xb[0x3];do(NQ)[Xb[1]]=NQ[iQ]..NQ[iQ+1];end;end;end;end;elseif not(bb>=6)then NQ[Xb[0X1]]={E({},1,Xb[3])};else if bb~=0X7 then if not(not(NQ[Xb[3]]<=NQ[Xb[0x0002]]))then else oQ=Xb[0X1];end;else local eu,vu=Xb[0X1],(Xb[3]);WQ=eu+vu-1;do repeat local Bv,fv=K6,(NQ);if not(#Bv>0)then else local gp=({});for zA,lA in H,Bv do for LR,IR in H,lA do if IR[0X1]==fv and IR[2]>=0X0 then local qH=IR[2];do if not gp[qH]then(gp)[qH]={fv[qH]};end;end;IR[1]=gp[qH];IR[2]=1;end;end;end;end;until true;end;do return true,eu,vu;end;end;end;end;else if bb>=16 then if bb>=0X13 then if not(bb<20)then if bb==0x15 then NQ[Xb[1]]=NQ[Xb[3]]~=Xb[7];else NQ[Xb[1]]=NQ[Xb[0X3]]%NQ[Xb[0x2]];end;else local Xz=NQ[Xb[3]]/NQ[Xb[2]];(NQ)[Xb[1]]=Xz-Xz%1;end;else if bb<17 then local Bv=(IQ-Y6);local Lv=Xb[0X001];if Bv<0X0 then Bv=-1;end;do for xb=Lv,Lv+Bv do(NQ)[xb]=tQ[Y6+(xb-Lv)+0X1];end;end;do WQ=Lv+Bv;end;else if bb==0X012 then if Xb[2]==0xbb then oQ=oQ-1;(k6)[oQ]={[6]=0X55,[1]=(Xb[1]-191),[0X3]=(Xb[3]-0XBf)};else repeat local BF,FF=K6,NQ;if not(#BF>0X0)then else local fs=({});for lt,gt in H,BF do for hh,Uh in H,gt do if Uh[0X1]==FF and Uh[2]>=0 then local G1=(Uh[2]);if not(not fs[G1])then else(fs)[G1]={FF[G1]};end;do Uh[0X0001]=fs[G1];end;Uh[2]=0X1;end;end;end;end;until 1528534505;do return;end;end;else NQ[Xb[0x001]][Xb[0X4]]=Xb[7];end;end;end;else if not(bb<0xd)then if not(bb<14)then do if bb~=0X000F then if Xb[2]~=52 then(NQ)[Xb[1]]=-NQ[Xb[3]];else oQ=oQ-1;do(k6)[oQ]={[0X01]=(Xb[1]-117),[0X06]=87,[0X3]=(Xb[0X0003]-0x75)};end;end;else oQ=Xb[0X3];end;end;else NQ[Xb[0X1]]=NQ[Xb[3]]+NQ[Xb[2]];end;elseif bb~=0x0000c then(NQ[Xb[0X00001]])[NQ[Xb[0X3]]]=NQ[Xb[2]];else BM[Xb[3]]=NQ[Xb[1]];end;end;end;end;end;else if not(bb>=68)then if bb>=0X0038 then if bb>=62 then if not(bb<0X41)then if bb<66 then(NQ)[Xb[0X1]]=nil;else do if bb~=67 then if not(NQ[Xb[0X3]]<=NQ[Xb[2]])then else oQ=Xb[0X1];end;else local Wc=(Xb[1]);WQ=Wc+Xb[0x3]-1;NQ[Wc]=NQ[Wc](E(NQ,Wc+1,WQ));do WQ=Wc;end;end;end;end;else do if bb<63 then local t3=Xb[0X00001];local C3=(Xb[2]-0X001)*50;local c3=NQ[t3];for UO=0X001,WQ-t3 do c3[C3+UO]=NQ[t3+UO];end;else if bb~=64 then do if not(not(NQ[Xb[3]]<NQ[Xb[0x02]]))then else oQ=Xb[0X1];end;end;else local mH=(Xb[1]);local LH,wH,GH=NQ[mH]();if LH then NQ[mH+1]=wH;do NQ[mH+0X002]=GH;end;oQ=Xb[3];end;end;end;end;end;else if not(bb>=0X3b)then do if not(bb<57)then if bb==58 then do(NQ)[Xb[1]]=BM[Xb[0X3]];end;else do if NQ[Xb[3]]~=Xb[0X7]then else oQ=Xb[1];end;end;end;else if NQ[Xb[3]]==NQ[Xb[0x002]]then else oQ=Xb[0X1];end;end;end;else if not(bb<60)then do if bb==61 then local yD=(Q6[Xb[3]]);NQ[Xb[1]]=yD[1][yD[2]];else local eS=Q6[Xb[0X00003]];eS[1][eS[0X0002]]=NQ[Xb[0X1]];end;end;else NQ[Xb[1]]=NQ[Xb[0X3]]<=NQ[Xb[2]];end;end;end;else if not(bb<50)then if not(bb>=0X35)then if bb<51 then NQ[Xb[1]]=false;else if bb==0X34 then NQ[Xb[0x01]]=NQ[Xb[0X03]]*NQ[Xb[0X02]];else local e8=Xb[1];NQ[e8](NQ[e8+0X1],NQ[e8+0X2]);WQ=e8-0X1;end;end;else if bb<54 then(NQ[Xb[1]])[Xb[4]]=NQ[Xb[0X2]];else do if bb~=55 then(NQ[Xb[1]])[NQ[Xb[0X003]]]=Xb[7];else WQ=Xb[1];(NQ[WQ])();WQ=WQ-0X1;end;end;end;end;else if not(bb>=47)then if bb~=0x2e then do MQ[Xb[4]]=NQ[Xb[1]];end;else(NQ)[Xb[0X00001]]=L(NQ[Xb[3]]);end;else if not(bb<0X30)then do if bb~=49 then NQ[Xb[1]]=NQ[Xb[0x3]];else if NQ[Xb[3]]==Xb[7]then else oQ=Xb[1];end;end;end;else do if not(not(NQ[Xb[0X0003]]<=Xb[7]))then else do oQ=Xb[1];end;end;end;end;end;end;end;elseif not(bb>=79)then if bb<73 then if bb<70 then do if bb~=0X45 then NQ[Xb[0x00001]]=NQ[Xb[3]]-NQ[Xb[2]];else local nR=(Xb[3]);local RR=(Xb[1]);do if nR==0 then else WQ=RR+nR-0X1;end;end;local UR,LR=nil,(nil);local cR=(Xb[0X02]);if nR==0X0001 then UR,LR=vM(NQ[RR]());else UR,LR=vM(NQ[RR](E(NQ,RR+1,WQ)));end;if cR==1 then do WQ=RR-1;end;else do if cR~=0 then do UR=RR+cR-2;end;WQ=UR+1;else UR=UR+RR-0x001;WQ=UR;end;end;local WY=0x0000;for SM=RR,UR do WY=WY+0X1;do NQ[SM]=LR[WY];end;end;end;end;end;else if not(bb>=71)then NQ[Xb[0X1]]=NQ[Xb[0x3]]^NQ[Xb[0x002]];else if bb~=0x0048 then if Xb[0x2]~=210 then repeat local Rz,Gz=K6,(NQ);do if not(#Rz>0x00)then else local u0={};for HY,VY in H,Rz do for dH,hH in H,VY do if not(hH[0X01]==Gz and hH[2]>=0x000)then else local ly=(hH[2]);if not(not u0[ly])then else u0[ly]={Gz[ly]};end;hH[0x1]=u0[ly];do(hH)[2]=1;end;end;end;end;end;end;until true;local aP=Xb[0X1];return false,aP,aP;else oQ=oQ-1;k6[oQ]={[3]=(Xb[0X03]-0X1A),[0x1]=(Xb[1]-26),[0x6]=0X41};end;else do(NQ)[Xb[0X1]]=NQ[Xb[0X3]]>=NQ[Xb[2]];end;end;end;end;else if bb<76 then if not(bb>=74)then if NQ[Xb[3]]<NQ[Xb[0X2]]then oQ=Xb[1];end;else if bb~=0X4b then do NQ[Xb[1]]=NQ[Xb[3]]%Xb[7];end;else repeat local Ok,fk=K6,(NQ);if#Ok>0 then local eE={};for ex,Mx in H,Ok do for CI,fI in H,Mx do do if not(fI[1]==fk and fI[0X2]>=0)then else local OK=(fI[0x002]);if not eE[OK]then do eE[OK]={fk[OK]};end;end;fI[1]=eE[OK];do fI[2]=0X1;end;end;end;end;end;end;until true;do return true,Xb[0X1],1;end;end;end;else do if not(bb<77)then if bb==0X4E then(NQ)[Xb[1]]=NQ[Xb[0x00003]]>NQ[Xb[2]];else repeat local QI,GI,dI=K6,NQ,Xb[1];do if#QI>0X0 then local Me=({});for o0,B0 in H,QI do do for c9,f9 in H,B0 do do if not(f9[0X00001]==GI and f9[2]>=dI)then else local Yl=f9[0x2];if not(not Me[Yl])then else do(Me)[Yl]={GI[Yl]};end;end;do f9[1]=Me[Yl];end;(f9)[0X02]=0X01;end;end;end;end;end;end;end;until true;end;else NQ[Xb[0X0001]]=K(NQ[Xb[0X3]],NQ[Xb[2]]);end;end;end;end;else if bb>=85 then if not(bb>=0X0058)then if bb<0X56 then(NQ)[Xb[1]]=#NQ[Xb[3]];else do if bb~=0x57 then do(NQ)[Xb[1]]=Xb[0x00004];end;else repeat local ZZ,XZ=K6,(NQ);do if not(#ZZ>0x0)then else local a3={};for TB,IB in H,ZZ do do for OQ,vQ in H,IB do if vQ[0x1]==XZ and vQ[0X2]>=0X00000 then local il=vQ[2];do if not a3[il]then(a3)[il]={XZ[il]};end;end;do vQ[0X1]=a3[il];end;vQ[2]=0x1;end;end;end;end;end;end;until true;do return false,Xb[0X0001],WQ;end;end;end;end;else if bb<0x000059 then(NQ)[Xb[1]]=NQ[Xb[0x003]][Xb[7]];else do if bb==90 then local Jm=Xb[1];(NQ)[Jm]=NQ[Jm](E(NQ,Jm+0X1,WQ));WQ=Jm;else local IJ=(Xb[1]);for T8=IJ,IJ+(Xb[0X03]-1)do(NQ)[T8]=tQ[Y6+(T8-IJ)+0X1];end;end;end;end;end;else if bb<82 then if bb>=80 then if bb~=0X51 then local x8=(Xb[1]);local v8=(y(function(...)Y();do for XN,xN in...do(Y)(true,XN,xN);end;end;end));(v8)(NQ[x8],NQ[x8+0X1],NQ[x8+0X00002]);WQ=x8;(NQ)[x8]=v8;oQ=Xb[3];else do NQ[Xb[1]]=true;end;end;else WQ=Xb[0x1];(NQ)[WQ]=NQ[WQ]();end;else if not(bb>=83)then local vS=(nil);local iS=z6[Xb[0X3]];local mS=iS[7];local nS=#mS;if not(nS>0)then else vS={};for B1=1,nS do local G1=mS[B1];if G1[1]==0 then(vS)[B1-1]={NQ,G1[0X0002]};else(vS)[B1-1]=Q6[G1[2]];end;end;l(K6,vS);end;(NQ)[Xb[0X1]]=UM(MQ,iS,vS);else if bb~=0X54 then(NQ)[Xb[1]]=NQ[Xb[0X3]]/NQ[Xb[0X02]];else local Nb=Xb[1];NQ[Nb]=NQ[Nb](NQ[Nb+0X1]);WQ=Nb;end;end;end;end;end;end;until false;end;end);if eQ then do if HQ then if yQ~=0X1 then return NQ[nQ](E(NQ,nQ+0X1,WQ));else return NQ[nQ]();end;else if not(nQ)then else do return E(NQ,nQ,yQ);end;end;end;end;else if k(HQ)~="\strin\g"then U(HQ,0);else if X(HQ,"attempt to yield across metamethod/C%-call boundary")then do return coroutine.yield();end;end;do if not(X(HQ,"^.-:%d+: "))then U(HQ,0);else U("\Lurap\104\ \083\c\114\i\pt\:"..(W6[oQ-1]or"(internal)")..": "..B(HQ),0X0);end;end;end;end;end;i(D6,C6);return D6;end;GM=0X1;else wM=oM();GM=0X0;end;else return UM(g,wM,YM)(...);end;end;until(false);end;end)(rawset,type,nil,'\D\o-\h\pO',0X001000000,6,7,"\125\U",string,111,tostring,error,bit32.bnot,false,0X02,bit32.lshift,setfenv,bit32,0X100,getfenv,bit32.bxor,0X00001,0X0,string.sub,0X04,string.rep,bit32.bor,ipairs,select,table,true,setmetatable,...);
